const Profile = ({ name, tag, location, image, stats }) => {
  return (
    <div>
      <div>
        <img src={image} alt="User avatar" />
        <p>{name}</p>
        <p>{tag}</p>
        <p>{location}</p>
      </div>

      <ul>
        <li>
          <span>Followers</span>
          <span>{stats.followers}</span>
        </li>
        <li>
          <span>Views</span>
          <span>{stats.views}</span>
        </li>
        <li>
          <span>Likes</span>
          <span>{stats.likes}</span>
        </li>
      </ul>
    </div>
  );
};

export default Profile;

// Цей код - це компонент React, який відображає профіль користувача. Давай розберемо його крок за кроком:

// 1. **const Profile = ({ name, tag, location, image, stats }) => {...}:**
//    - Цей рядок оголошує функціональний компонент React з іменем `Profile`. Він приймає об'єкт з різними даними про користувача: `name`, `tag`, `location`, `image`, і `stats`.
//    - Функція використовує деструктуризацію аргументів, щоб витягти ці значення з об'єкта, що передається в компонент.

// 2. **return (...):**
//    - Це тіло функції, яке визначає, що буде повернено з цього компонента.

// 3. **<div>...</div>:**
//    - Цей компонент React відображається як `<div>`, що містить усі інші елементи.

// 4. **<img src={image} alt="User avatar" />:**
//    - Це тег `<img>`, який відображає зображення користувача. Зображення береться з властивості `image` із переданого об'єкта.

// 5. **<p>{name}</p>, <p>{tag}</p>, <p>{location}</p>:**
//    - Три теги `<p>` відображають ім'я користувача, його тег та місцезнаходження. Ці дані беруться з властивостей `name`, `tag` і `location` відповідно.

// 6. **<ul>...</ul>:**
//    - Цей тег `<ul>` створює ненумерований список.

// 7. **<li>...</li>:**
//    - Цей тег `<li>` відображає елементи списку.

// 8. **<span>Followers</span>, <span>{stats.followers}</span>:**
//    - Перший `<span>` відображає мітку "Followers", а другий `<span>` відображає кількість фоловерів користувача. Кількість фоловерів береться з властивості `followers` об'єкта `stats`.

// 9. **Аналогічно для "Views" і "Likes":**
//    - Так само відображаються кількість переглядів і кількість лайків, які також беруться з властивостей `views` і `likes` об'єкта `stats`.

// 10. **export default Profile;:**
//     - Цей рядок експортує компонент `Profile`, щоб його можна було використовувати в інших частинах програми.

// Отже, загалом, цей компонент React відображає дані профілю користувача, такі як ім'я, тег, місцезнаходження, зображення та статистику (фоловери, перегляди, лайки).

// Файл Profile.js:

// {...}: Ці фігурні дужки використовуються для оголошення об'єкта з властивостями name, tag, location, image, і stats у параметрах функції Profile.
// <div>...</div>: Ці теги <div> використовуються для створення блочного елемента, який містить усі інші елементи в компоненті Profile.
// <img src={image} alt="User avatar" />: Цей тег <img> відображає зображення користувача. {image} використовується для вставки значення властивості image у властивість src.
// <p>{name}</p>, <p>{tag}</p>, <p>{location}</p>: Ці теги <p> відображають тексти про ім'я, тег та місцезнаходження користувача. {name}, {tag}, і {location} використовуються для вставки значень відповідних властивостей.
// <ul>...</ul>: Цей тег <ul> створює ненумерований список для відображення статистики користувача.
// <li>...</li>: Ці теги <li> відображають елементи списку.
// <span>...</span>: Теги <span> використовуються для оформлення тексту без зміни його структури. Наприклад, використовуються для розділення міток (наприклад, "Followers", "Views", "Likes") від їх відповідних значень статистики.
// {stats.followers}, {stats.views}, {stats.likes}: Ці конструкції використовуються для вставки значень властивостей followers, views і likes об'єкта stats у відповідні місця в компоненті.
